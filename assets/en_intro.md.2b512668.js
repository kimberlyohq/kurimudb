import{o as n,c as a,a as s}from"./app.80c0d1c4.js";const e='{"title":"Getting Started","description":"","frontmatter":{},"headers":[{"level":2,"title":"What is Kurimudb","slug":"what-is-kurimudb"},{"level":2,"title":"Quick Start","slug":"quick-start"},{"level":3,"title":"Local","slug":"local"},{"level":3,"title":"Cookie","slug":"cookie"},{"level":3,"title":"Memory","slug":"memory"},{"level":3,"title":"Db","slug":"db"},{"level":3,"title":"Subscribing Data Mutation","slug":"subscribing-data-mutation"},{"level":2,"title":"Are You Ready?","slug":"are-you-ready"}],"relativePath":"en/intro.md","lastUpdated":1621352695268}',t={},o=s('<h1 id="getting-started"><a class="header-anchor" href="#getting-started" aria-hidden="true">#</a> Getting Started</h1><h2 id="what-is-kurimudb"><a class="header-anchor" href="#what-is-kurimudb" aria-hidden="true">#</a> What is Kurimudb</h2><p>Kurimudb is a progressive <strong>Web Front-end local persistence library</strong>.It can save your data to LocalStorage, IndexedDB, Cookie, and so on. Also, support subscribing the mutating of data.</p><p>In addition to persistent data, Kurimudb can be <a href="https://en.wikipedia.org/wiki/Model%E2%80%93view%E2%80%93viewmodel#Components_of_MVVM_pattern" target="_blank" rel="noopener noreferrer">Model layer</a> of your application if your want, then take the responsibility of state management in your application to make your app “Single source of truth” really.</p><p>Kurimudb&#39;s persistence feature is driver-oriented. It means you can replace the implementation without changing code. We build several common driver. If these are not for you, you can build your own driver.</p><h2 id="quick-start"><a class="header-anchor" href="#quick-start" aria-hidden="true">#</a> Quick Start</h2><p><code>kurimudb-zero-config</code> is the library that allow using Kurimudb with no config. Run following config to install it:</p><div class="language-bash line-numbers-mode"><pre><code><span class="token function">npm</span> i kurimudb-zero-config@4\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br></div></div><h3 id="local"><a class="header-anchor" href="#local" aria-hidden="true">#</a> Local</h3><p>By operating the <code>local</code> object, the data can be stored in LocalStorage. Even if the page is refreshed, the data will still be there!</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> local <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\nlocal<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// writing..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> local<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// reading..</span>\n<span class="token keyword">delete</span> local<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// deleting..</span>\n<span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> local<span class="token punctuation">.</span>data<span class="token punctuation">;</span> <span class="token comment">// checking exist..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="cookie"><a class="header-anchor" href="#cookie" aria-hidden="true">#</a> Cookie</h3><p>By operating the <code>cookie</code> object, the data can be stored in Cookie. The data stored in Cookie should be less as possible because all data in Cookie will send to the server-side automatically by the browser when making the request.</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> cookie <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\ncookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// writing..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// reading..</span>\n<span class="token keyword">delete</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// deleting..</span>\n<span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> cookie<span class="token punctuation">.</span>data<span class="token punctuation">;</span> <span class="token comment">// checking exist..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="memory"><a class="header-anchor" href="#memory" aria-hidden="true">#</a> Memory</h3><p>By operating the <code>memory</code> object, data can be stored in Memory. When the page is refreshed, the data will be cleared.</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> memory <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\nmemory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// writing..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// reading..</span>\n<span class="token keyword">delete</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// deleting..</span>\n<span class="token string">&quot;say&quot;</span> <span class="token keyword">in</span> memory<span class="token punctuation">.</span>data<span class="token punctuation">;</span> <span class="token comment">// checking exist..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="db"><a class="header-anchor" href="#db" aria-hidden="true">#</a> Db</h3><p>By operating the <code>db</code> object, the data can be stored in IndexedDB. IndexedDB can stored JavaScript Object such as File and Blob. Its maximum data capacity depends on the available hard disk size of the user&#39;s disk.</p><p>It is worth noting that IndexedDB&#39;s API is asynchronous so that the return values of APIs related to <code>db</code> and reading are all <a href="https://developer.mozilla.org/docs/Web/JavaScript/Reference/Global_Objects/Promise" target="_blank" rel="noopener noreferrer">Promise object</a>.</p><div class="language-js line-numbers-mode"><pre><code><span class="token keyword">import</span> <span class="token punctuation">{</span> db <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;kurimudb-zero-config&quot;</span><span class="token punctuation">;</span>\n\ndb<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say <span class="token operator">=</span> <span class="token string">&quot;hello world&quot;</span><span class="token punctuation">;</span> <span class="token comment">// writing..</span>\n<span class="token keyword">let</span> say <span class="token operator">=</span> <span class="token keyword">await</span> db<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// reading, return value will be a Promise..</span>\n<span class="token keyword">delete</span> db<span class="token punctuation">.</span>data<span class="token punctuation">.</span>say<span class="token punctuation">;</span> <span class="token comment">// deleting..</span>\n<span class="token keyword">await</span> db<span class="token punctuation">.</span><span class="token function">has</span><span class="token punctuation">(</span><span class="token string">&quot;say&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// checking exist, return value will be a Promise..</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="subscribing-data-mutation"><a class="header-anchor" href="#subscribing-data-mutation" aria-hidden="true">#</a> Subscribing Data Mutation</h3><p>Kurimudb also provides the feature of Subscribing Data Mutation. All things you need to do is adding <code>$</code> to the end of the value, then you can do something after it mutating.</p><div class="language-js line-numbers-mode"><pre><code>local<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">say$</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;what you want to say: &quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><p>By default, the Closure will be executed immediately so that you can assign initial values to the reactive variables in your view conveniently. If you just want to execute it when the data changes, adding the <code>immediate</code> option.</p><div class="language-js line-numbers-mode"><div class="highlight-lines"><br><br><br><br><div class="highlighted"> </div><br><br></div><pre><code>local<span class="token punctuation">.</span>data<span class="token punctuation">.</span><span class="token function">say$</span><span class="token punctuation">(</span>\n  <span class="token punctuation">(</span><span class="token parameter">val</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>\n    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&quot;what you want to say: &quot;</span> <span class="token operator">+</span> val<span class="token punctuation">)</span><span class="token punctuation">;</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token punctuation">{</span> immediate<span class="token operator">:</span> <span class="token boolean">false</span> <span class="token punctuation">}</span>\n<span class="token punctuation">)</span><span class="token punctuation">;</span>\n</code></pre><div class="line-numbers-wrapper"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h2 id="are-you-ready"><a class="header-anchor" href="#are-you-ready" aria-hidden="true">#</a> Are You Ready?</h2><p>We have just introduced the core usages of Kurimudb, but these are only a small part of Kurimudb. So, please read the entire tutorial!</p>',28);t.render=function(s,e,t,p,c,i){return n(),a("div",null,[o])};export default t;export{e as __pageData};
